#pragma checksum "C:\Users\HUY 4\Desktop\C#\DVN\Views\Admin\Report\Revenue.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3986c4487a2fe104deebe59416b503b7290f78aa"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Report_Revenue), @"mvc.1.0.view", @"/Views/Admin/Report/Revenue.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\HUY 4\Desktop\C#\DVN\Views\_ViewImports.cshtml"
using DVN;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\HUY 4\Desktop\C#\DVN\Views\_ViewImports.cshtml"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\HUY 4\Desktop\C#\DVN\Views\_ViewImports.cshtml"
using DVN.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\HUY 4\Desktop\C#\DVN\Views\_ViewImports.cshtml"
using DVN.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\HUY 4\Desktop\C#\DVN\Views\_ViewImports.cshtml"
using DVN.Extension;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\HUY 4\Desktop\C#\DVN\Views\Admin\Report\Revenue.cshtml"
using System.Text.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3986c4487a2fe104deebe59416b503b7290f78aa", @"/Views/Admin/Report/Revenue.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f799a469c22ff79f64247b11e07f313ff96a02f2", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Report_Revenue : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\HUY 4\Desktop\C#\DVN\Views\Admin\Report\Revenue.cshtml"
  
    Layout = "_LayoutAdmin";
    ViewBag.Title = "Report";

    

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\HUY 4\Desktop\C#\DVN\Views\Admin\Report\Revenue.cshtml"
                                               
    
    var Statistic = ViewData["Statistic"] as DashboardViewModel;
    var  StatisticOfDay =   JsonSerializer.Serialize(Statistic?.StatisticOfDay);
    var Data = JsonSerializer.Serialize(ViewData["data"]);
    

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                <main>
              
                    <div class=""container-fluid"">
                        <h1 class=""mt-4"">THỐNG KÊ</h1>
                        <ol class=""breadcrumb mb-4"">
                            <li class=""breadcrumb-item active"">THỐNG KÊ DOANH THU</li>
                        </ol>
                        <div class=""row"">
                            <figure class=""highcharts-figure"">
                            <div id=""container""></div>
                            <p class=""highcharts-description"" style=""opacity: 0"">
                                Basic line chart showing trends in a dataset. This chart includes the
                                <code>series-label</code> module, which adds a label to each line for
                                enhanced readability.
                            </p>
                            </figure>
                        </div>
                        <div class=""card mb-4"">
                            <div class=""car");
            WriteLiteral(@"d-header"">
                                <i class=""fas fa-table mr-1""></i>
                                Log
                            </div>
                            <div class=""card-body"">
                                <div class=""table-responsive"">
                                    <table class=""table table-bordered"" id=""dataTable"" width=""100%"" cellspacing=""0"">
                                        <thead>
                                            <tr>
                                                <th>Đối tượng</th>
                                                <th>Hành động</th>
                                                <th>Người thực hiện</th>
                                                <th>Thời gian</th>
                                                <th>Nội dung</th>
                                            </tr>
                                        </thead>
                                        <tfoot>
                                           ");
            WriteLiteral(@" <tr>
                                                <th>Đối tượng</th>
                                                <th>Hành động</th>
                                                <th>Người thực hiện</th>
                                                <th>Thời gian</th>
                                                <th>Nội dung</th>
                                            </tr>
                                        </tfoot>
                                        <tbody>
                                            <tr>
                                                <td>Liên hệ</td>
                                                <td>Gửi</td>
                                                <td>Nguyễn Văn X</td>
                                                <td>11/11/2020</td>
                                                <td>Đã gửi liên hệ đến hệ thống <a href=""#"">Xem liên hệ</a></td>
                                            </tr>
                                       ");
            WriteLiteral(@"     <tr>
                                                <td>Nguyễn Văn X</td>
                                                <td>Accountant</td>
                                                <td>Tokyo</td>
                                                <td>63</td>
                                                <td>2011/07/25</td>
                                            </tr>
                                            <tr>
                                                <td>Ashton Cox</td>
                                                <td>Junior Technical Author</td>
                                                <td>San Francisco</td>
                                                <td>66</td>
                                                <td>2009/01/12</td>
                                            </tr>
                                            <tr>
                                                <td>Cedric Kelly</td>
                                                <td>S");
            WriteLiteral(@"enior Javascript Developer</td>
                                                <td>Edinburgh</td>
                                                <td>22</td>
                                                <td>2012/03/29</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </main>
");
            DefineSection("Css", async() => {
                WriteLiteral(@"
    <style>
        .highcharts-figure, .highcharts-data-table table {
    min-width: 310px; 
    max-width: 800px;
    margin: 1em auto;
}

#container {
    height: 400px;
}

.highcharts-data-table table {
	font-family: Verdana, sans-serif;
	border-collapse: collapse;
	border: 1px solid #EBEBEB;
	margin: 10px auto;
	text-align: center;
	width: 100%;
	max-width: 500px;
}
.highcharts-data-table caption {
    padding: 1em 0;
    font-size: 1.2em;
    color: #555;
}
.highcharts-data-table th {
	font-weight: 600;
    padding: 0.5em;
}
.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
    padding: 0.5em;
}
.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
    background: #f8f8f8;
}
.highcharts-data-table tr:hover {
    background: #f1f7ff;
}

    </style>
");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Script", async() => {
                WriteLiteral(@"
    <script src=""https://code.highcharts.com/highcharts.js""></script>
    <script src=""https://code.highcharts.com/modules/series-label.js""></script>
    <script src=""https://code.highcharts.com/modules/exporting.js""></script>
    <script src=""https://code.highcharts.com/modules/export-data.js""></script>
    <script src=""https://code.highcharts.com/modules/accessibility.js""></script>
    <script>
        function rhtmlspecialchars(str) {

            if (typeof(str) == ""string"") {
                str = str.replace(/&gt;/ig, "">"");
                str = str.replace(/&lt;/ig, ""<"");
                str = str.replace(/&#039;/g, ""'"");
                str = str.replace(/&quot;/ig, '""');
                str = str.replace(/&amp;/ig, '&'); /* must do &amp; last */
            }
            return str;

        }
        let data = rhtmlspecialchars('");
#nullable restore
#line 155 "C:\Users\HUY 4\Desktop\C#\DVN\Views\Admin\Report\Revenue.cshtml"
                                 Write(Data);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
        data = JSON.parse(data);
        let statisticData = [
            {
                'month': 1,
                'value': 0
            },
            {
                'month': 2,
                'value': 0
            },
            {
                'month': 3,
                'value': 0
            },
            {
                'month': 4,
                'value': 0
            },
            {
                'month': 5,
                'value': 0
            },
            {
                'month': 6,
                'value': 0
            },
            {
                'month': 7,
                'value': 0
            },
            {
                'month': 8,
                'value': 0
            },
            {
                'month': 9,
                'value': 0
            },
            {
                'month': 10,
                'value': 0
            },
            {
                'month': 11,
                'value': 0
");
                WriteLiteral(@"            },
            {
                'month': 12,
                'value': 0
            }
        ];
        
        statisticData = statisticData.map(item => {  
                         let index = data.findIndex(d => d.Month == item.month)
                     if(index != -1){
                          item.value = data[index].value; 

                     }
                     return item;
             })

        data =  statisticData.map(item => item.value);

Highcharts.chart('container', {
    chart: {
        zoomType: 'xy'
},
    title: {
        text: 'Biểu đồ thống kê doanh thu năm 2020'
    },
    subtitle: {
        text: ''
    },
    xAxis: [{
        categories: ['1', '2', '3', '4', '5', '6',
            '7', '8', '9', '10', '11', '12'],
        crosshair: true
    }],
    yAxis: [{ // Primary yAxis
        labels: {
            format: '{value}°C',
            style: {
                color: Highcharts.getOptions().colors[1]
            }
    ");
                WriteLiteral(@"    },
        title: {
            text: 'Temperature',
            style: {
                color: Highcharts.getOptions().colors[1]
            }
        }
    }, { // Secondary yAxis
        title: {
            text: 'Doanh thu',
            style: {
                color: Highcharts.getOptions().colors[0]
            }
        },
        labels: {
            format: '{value} vnđ',
            style: {
                color: Highcharts.getOptions().colors[0]
            }
        },
        opposite: true
    }],
    tooltip: {
        shared: true
    },
    legend: {
        layout: 'vertical',
        align: 'left',
        x: 120,
        verticalAlign: 'top',
        y: 100,
        floating: true,
        backgroundColor:
            Highcharts.defaultOptions.legend.backgroundColor || // theme
            'rgba(255,255,255,0.25)'
    },
    series: [{
        name: 'Doanh thu',
        type: 'column',
        yAxis: 1,
        data: data,
        tooltip: {");
                WriteLiteral("\r\n            valueSuffix: \' vnđ\'\r\n        }\r\n\r\n    }]\r\n});\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
